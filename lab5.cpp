#include <iostream>
#include <math.h>

using namespace std;

int main()
{
	setlocale(LC_ALL, "rus");
	int* A, n, t, a, xm, m, xw; // вводим потребующиеся переменные
	cout << "Введите количество элементов массива: "; // запрашиваем у пользователя количество элементов массива
	cin >> n;
	A = new int[n]; // образуем массив с n элементами
	for (t = 0; t < n; t++) { // создаём цикл для присваивания значений элементам массива
		cout << "Введите целочисленное значение элемента " << t << ": ";
		cin >> a;
		A[t] = a;
	}
	xm = A[0]; // для нахождения минимального значения присваиваем Xmin значение первого элемента массива
	for (t = 1; t < n; t++) {
		if (A[t] < xm)
			xm = A[t];
	}
	cout << "Минимальное значение: " << xm << "\n"; // вывод получившегося минимального значения

	xw = 0; // переменная для нахождения суммы
	m = -1; // счётчик номера нуля
	for (t = 0; t < n; t++) { // ищем номер первого элемента равного нулю
		if (A[t] == 0) {
			m = t;
			break;
		}
		}
	if ((m == -1) || (m == (n-1) ))
		cout << "Элементов равных 0 в массиве нет,или он последний\n";
	else { // начинаем искать сумму
		for ( m;  m < n; m ++) {
			xw = xw + abs(A[m]);
		}
	cout << "Cумма по модулю элементов,стоящих после  первого 0-го элемента: " << xw << "\n"; // вывод получившегося  значения
	}

	int* b = new int[n]; // создаём вспомогательным массив
	int k = 0;
	for (t = 0; t < n; t += 2) { // переписываем элементы с нечётным индексом в новый массив
		b[k] = A[t];
		k++;
	}
	for (t = 1; t < n; t += 2) { // переписываем элементы с чётным индексом в новый массив
		b[k] = A[t];
		k++;
	}
	cout << "Преобразованный массив: "; // вывод преобразованного массива
	for (t = 0; t < n; t++)
		cout << b[t] << " ";

	delete[] A; // освобождаем память
	delete[] b;
	return 0;
}